name: conftest terraform
description: checks organization level policies against terraform code
inputs:
  AWS_ACCESS_KEY_ID:
    required: true
  AWS_SECRET_ACCESS_KEY:
    required: true
  AWS_SESSION_TOKEN:
    required: false
    description: pass the token if required
  TF_ROOT:
    required: true
  conftest_policy_path:
    required: true
outputs:
  imageid:
    value: ${{ steps.build-and-push.outputs.imageid }}
runs:
  using: "composite"
  steps:
    - name: setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.3.0
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ap-south-1
        aws-access-key-id: ${{ inputs.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ inputs.AWS_SESSION_TOKEN }}
    - name: Initialize Terraform
      run: terraform init -input=false
      shell: bash
    - name: Plan Terraform
      id: plan
      run: |
        cd ./${{ inputs.TF_ROOT }}
        terraform plan -var-file values.tfvars -input=false --out tfplan.binary
        terraform show -json tfplan.binary > tfplan.json
      shell: bash
    - name: validate terraform code
      uses: instrumenta/conftest-action@master
      with:
        files: tfplan.json
        policy: ${{ inputs.conftest_policy_path }} 

